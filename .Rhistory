# Barplot of the value of variance in percentage
barplot(
dat$variance,
#names.arg=1:nrow(dat),
main = "Variances",
xlab = "Principal Components",
ylab = "Percentage of variances",
col ="steelblue")
# Add connected line segments to the plot
lines(x = 1:nrow(dat),
y = dat$variance,
type="b", pch=19, col = "red")
barplot(
dat$variance,
#names.arg=1:nrow(dat),
main = "Variances",
xlab = "Principal Components",
ylab = "Percentage of variances",
col ="steelblue")
barplot(c(1,2,3))
dat$variance
# Original data matrix of dominant species in different stations
dat <- datCPOD$CompDmt
ht1 <- Heatmap(
dat, column_title = "Before scaled...",
row_names_gp = gpar(fontsize = 10),
column_names_max_height=unit(15, "cm"),
column_names_gp = gpar(fontsize = 10),
cluster_rows=F, cluster_columns=F)
# Scaled data matrix of dominant species in different stations
dat <- datCPOD$CompDmtScale
ht2 <- Heatmap(
dat, column_title = "After scaled...",
row_names_gp = gpar(fontsize = 10),
column_names_max_height=unit(15, "cm"),
column_names_gp = gpar(fontsize = 10),
cluster_rows=F, cluster_columns=F)
# plot
draw(ht1 + ht2,
column_title = "Compare the data before/after scaled",
column_title_side = "bottom")
# intialize a list to store data
datCPOD <- list()
# read tables: number of copepod in each station
# 34 stations
dat <- read.table(file.path(
filePathData, "cop_density.txt"),
header=T)
datCPOD$Density <- dat
# read tables: freq of copepod in each station
# 34 stations x 181 species
dat <- read.table(file.path(
filePathData, "copepod_composition.txt"),
header=T)
datCPOD$Compose <- dat
# read tables: species name
# 181 species
dat <- read.table(file.path(
filePathData, "copepodSPlist.txt"),
sep="\t", header=F)
datCPOD$SP_Total <- as.character(dat$V1)
# Search for dominant species
dat <- datCPOD$Compose
temp <- apply(dat >= 2, 1, sum)
datCPOD$SP_Dominant <- which(temp > 0)
# Extract the composition of dominant species
dat <- datCPOD$Compose
idx <- datCPOD$SP_Dominant
idn <- datCPOD$SP_Total
dat <- dat[idx,]
rownames(dat) <- idn[idx]
# composition of dominant species
# Note: transform the matrix since
# we are clustering on stations
datCPOD$CompDmt <- t(dat)
datCPOD$CompDmtScale <- scale(t(dat)) # scales the columns of a numeric matrix
#head(datCPOD$CompDmtScale)
# Original data matrix of dominant species in different stations
dat <- datCPOD$CompDmt
ht1 <- Heatmap(
dat, column_title = "Before scaled...",
row_names_gp = gpar(fontsize = 10),
column_names_max_height=unit(15, "cm"),
column_names_gp = gpar(fontsize = 10),
cluster_rows=F, cluster_columns=F)
# Scaled data matrix of dominant species in different stations
dat <- datCPOD$CompDmtScale
ht2 <- Heatmap(
dat, column_title = "After scaled...",
row_names_gp = gpar(fontsize = 10),
column_names_max_height=unit(15, "cm"),
column_names_gp = gpar(fontsize = 10),
cluster_rows=F, cluster_columns=F)
# plot
draw(ht1 + ht2,
column_title = "Compare the data before/after scaled",
column_title_side = "bottom")
dat <- datCPOD$CompDmtScale
mat <- cor(dat)
res.eig <- eigen(mat)
res.pca <- prcomp(dat, scale=TRUE, center=TRUE)
# Eigenvalues
eig <- res.eig$values^0.5
eig <- eig[!is.na(eig)]
# Variances in percentage
variance <- eig*100/sum(eig)
# Cumulative variances
cumvar <- cumsum(variance)
# Combine the result
dat <- data.frame(
eig = eig,
variance = variance,
cumvariance = cumvar)
kable(head(dat))
# Barplot of the value of variance in percentage
barplot(
dat$variance,
#names.arg=1:nrow(dat),
main = "Variances",
xlab = "Principal Components",
ylab = "Percentage of variances",
col ="steelblue")
# Add connected line segments to the plot
lines(x = 1:nrow(dat),
y = dat$variance,
type="b", pch=19, col = "red")
barplot(
dat$variance,
#names.arg=1:nrow(dat),
main = "Variances",
xlab = "Principal Components",
ylab = "Percentage of variances",
col ="steelblue")
plt <- barplot(
dat$variance,
names.arg=1:nrow(dat),
main = "Variances",
xlab = "Principal Components",
ylab = "Percentage of variances",
col ="steelblue")
lines(x = plt,
y = dat$variance,
type="b", pch=19, col = "red")
dat <- datCPOD$CompDmtScale
mat <- dist(dat)
res.mds <- cmdscale(mat, eig = TRUE, k = 2)
x <- res.mds$points[, 1]
y <- res.mds$points[, 2]
x <- res.mds$points[, 1]
y <- res.mds$points[, 2]
plot(x, y,
pch = 19,
xlim = range(x) + c(0, 600))
dat <- datCPOD$CompDmtScale
mat <- dist(dat)
res.mds <- cmdscale(mat, eig = TRUE, k = 2)
x <- res.mds$points[, 1]
y <- res.mds$points[, 2]
plot(x, y,
pch = 19,
xlim = range(x) + c(0, 600))
dat <- datCPOD$CompDmtScale
mat <- as.matrix(dist(dat))
res.mds <- cmdscale(mat, eig = TRUE, k = 2)
x <- res.mds$points[, 1]
y <- res.mds$points[, 2]
# plot
plot(x, y,
pch = 19,
xlim = range(x) + c(0, 600))
dat <- datCPOD$CompDmtScale
mat <- as.matrix(dist(dat))
res.mds <- cmdscale(mat, eig = TRUE, k = 2)
x <- res.mds$points[, 1]
y <- res.mds$points[, 2]
plot(x, y,
pch = 19,
xlim = range(x) + c(0, 600))
plot(x, y,
pch = 19
)
range(x)
plot(x, y, pch = 19,
xlim = range(x) + c(-3, 1))
plot(x, y, pch = 19,
xlim = range(x) + c(-3, 1),
ylim = range(y) + c(-1, 1))
datCPOD$SP_Dominant
datCPOD$SP_Total
class(datCPOD$SP_Total)
vec <- datCPOD$SP_Total[datCPOD$SP_Dominant]
text(x, y, pos = 4, labels = vec)
text(x, y, pos = 4, labels = vec, cex=0.1)
# get the scores
x <- res.mds$points[, 1]
y <- res.mds$points[, 2]
# plot
plot(x, y, pch = 19,
xlim = range(x) + c(-3, 1),
ylim = range(y) + c(-1, 1))
# species names of dominant species
vec <- datCPOD$SP_Total[datCPOD$SP_Dominant]
# add labels
text(x, y, pos = 4, labels = vec, cex=0.1)
text(x, y, pos = 4, labels = vec, cex=0.5)
# get the scores
x <- res.mds$points[, 1]
y <- res.mds$points[, 2]
# plot
plot(x, y, pch = 19,
xlim = range(x) + c(-3, 1),
ylim = range(y) + c(-2, 2))
# species names of dominant species
vec <- datCPOD$SP_Total[datCPOD$SP_Dominant]
# add labels
text(x, y, pos = 4, labels = vec, cex=0.5)
# get the scores
x <- res.mds$points[, 1]
y <- res.mds$points[, 2]
# plot
plot(x, y, pch = 19,
xlim = range(x) + c(-3, 1),
ylim = c(-6, 6))
# species names of dominant species
vec <- datCPOD$SP_Total[datCPOD$SP_Dominant]
# add labels
text(x, y, pos = 4, labels = vec, cex=0.5)
# get the scores
x <- res.mds$points[, 1]
y <- res.mds$points[, 2]
# plot
plot(x, y, pch = 19,
xlim = c(-4, 7),
ylim = c(-6, 6))
# species names of dominant species
vec <- datCPOD$SP_Total[datCPOD$SP_Dominant]
# add labels
text(x, y, pos = 4, labels = vec, cex=0.5)
# get the scores
x <- res.mds$points[, 1]
y <- res.mds$points[, 2]
# plot
plot(x, y, pch = 19,
xlim = c(-3, 7),
ylim = c(-6, 6))
# species names of dominant species
vec <- datCPOD$SP_Total[datCPOD$SP_Dominant]
# add labels
text(x, y, pos = 4, labels = vec, cex=0.5)
# get the scores
x <- res.mds$points[, 1]
y <- res.mds$points[, 2]
# plot
plot(x, y, pch = 19,
xlim = c(-4, 7),
ylim = c(-6, 6))
# species names of dominant species
vec <- datCPOD$SP_Total[datCPOD$SP_Dominant]
# add labels
text(x, y, pos = 4, labels = vec, cex=0.5)
# get the scores
x <- res.mds$points[, 1]
y <- res.mds$points[, 2]
# plot
plot(x, y, pch = 19,
xlim = c(-4, 8),
ylim = c(-6, 6))
# species names of dominant species
vec <- datCPOD$SP_Total[datCPOD$SP_Dominant]
# add labels
text(x, y, pos = 4, labels = vec, cex=0.5)
metaMDS
?metaMDS
??metaMDS
# the function metaMDS if from library vegan
library(vegan)
# NDMS calculation
dat <- datCPOD$CompDmtScale
res.nmds <- metaMDS(dat)
dat <- datCPOD$CompDmtScale
mat <- as.matrix(dist(dat))
res.nmds <- metaMDS(mat)
plot(res.nmds, type = "n")
points(res.nmds, display = "sites", cex = 0.8, pch=21, col="red", bg="yellow")
text(res.nmds, display = "spec", cex=0.7, col="blue")
text(res.nmds, display = "spec", cex=0.7, col="blue")
data(dune)
head(dune)
dat <- datCPOD$CompDmtScale
mat <- as.matrix(dist(dat))
# the function metaMDS if from library vegan
library(vegan)
# NDMS calculation
res.nmds <- metaMDS(mat)
plot(res.nmds, type = "n")
plot(res.nmds)
# plot
plot(res.nmds)
# add points
points(res.nmds,
display = "sites",
cex = 0.8, pch=21,
col="red", bg="yellow")
# add text
text(res.nmds, display = "spec", cex=0.7, col="blue")
# the function metaMDS if from library vegan
library(vegan)
# NDMS calculation
res.nmds <- metaMDS(dat)
dat <- datCPOD$CompDmt
res.nmds <- metaMDS(dat)
# plot
plot(res.nmds)
# add points
points(res.nmds,
display = "sites",
cex = 0.8, pch=21,
col="red", bg="yellow")
# add text
text(res.nmds, display = "spec", cex=0.7, col="blue")
# plot
plot(res.nmds, type = "n")
# add points
points(res.nmds,
display = "sites",
cex = 0.8, pch=21,
col="red", bg="yellow")
# add text
text(res.nmds, display = "spec", cex=0.7, col="blue")
library(MASS)
d <- dist(dat) # euclidean distances between the rows
fit <- isoMDS(d, k=2) # k is the number of dim
fit # view results
x <- fit$points[,1]
y <- fit$points[,2]
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2",
main="Nonmetric MDS", type="n")
text(x, y, labels = row.names(mydata), cex=.7)
text(x, y, labels = row.names(dat), cex=.7)
dat <- datCPOD$CompDmtScale
mat <- as.matrix(dist(dat))
library(MASS)
res.nmds <- isoMDS(mat)
plot(res.nmds, type = "n")
# the function metaMDS if from library vegan
library(MASS)
# NDMS calculation
res.nmds <- isoMDS(mat)
x <- res.nmds$points[,1]
y <- res.nmds$points[,2]
plot(x, y,
xlab="Coordinate 1",
ylab="Coordinate 2",
main="Nonmetric MDS", type="n")
points(res.nmds,
display = "sites",
cex = 0.8, pch=21,
col="red", bg="yellow")
points(x,y,
display = "sites",
cex = 0.8, pch=21,
col="red", bg="yellow")
text(x, y, labels = row.names(dat), cex=.7)
# plot solution
x <- res.nmds$points[,1]
y <- res.nmds$points[,2]
# plot
plot(x, y,
xlab="Coordinate 1",
ylab="Coordinate 2",
main="Nonmetric MDS", type="n")
# add points
points(x,y,
display = "sites",
cex = 0.8, pch=21,
col="red", bg="yellow")
# add text
text(x, y, labels = row.names(dat), cex=.7)
# plot solution
x <- res.nmds$points[,1]
y <- res.nmds$points[,2]
# plot
plot(x, y,
xlab="Coordinate 1",
ylab="Coordinate 2",
main="Nonmetric MDS", type="n")
# add points
points(x,y,
display = "sites",
cex = 0.8, pch=21,
col="red", bg="yellow")
# add text
text(x, y, pos = 4, labels = row.names(dat), cex=.7)
# plot solution
x <- res.nmds$points[,1]
y <- res.nmds$points[,2]
# plot
plot(x, y,
xlab="Coordinate 1",
ylab="Coordinate 2",
main="Nonmetric MDS", type="n")
# add points
points(x,y,
display = "sites",
cex = 0.8, pch=21,
col="red", bg="yellow")
# add text
text(x+0.01, y-0.01, labels = row.names(dat), cex=.7)
# plot solution
x <- res.nmds$points[,1]
y <- res.nmds$points[,2]
# plot
plot(x, y,
xlab="Coordinate 1",
ylab="Coordinate 2",
main="Nonmetric MDS", type="n")
# add points
points(x,y,
display = "sites",
cex = 0.8, pch=21,
col="red", bg="yellow")
# add text
text(x+0.1, y-0.1, labels = row.names(dat), cex=.7)
# plot solution
x <- res.nmds$points[,1]
y <- res.nmds$points[,2]
# plot
plot(x, y,
xlab="Coordinate 1",
ylab="Coordinate 2",
main="Nonmetric MDS", type="n")
# add points
points(x,y,
display = "sites",
cex = 0.8, pch=21,
col="red", bg="yellow")
# add text
text(x+0.5, y-0.5, labels = row.names(dat), cex=.7)
# plot solution
x <- res.nmds$points[,1]
y <- res.nmds$points[,2]
# plot
plot(x, y,
xlab="Coordinate 1",
ylab="Coordinate 2",
main="Nonmetric MDS", type="n")
# add points
points(x,y,
display = "sites",
cex = 0.8, pch=21,
col="red", bg="yellow")
# add text
text(x+0.2, y-0.2, labels = row.names(dat), cex=.7)
# plot solution
x <- res.nmds$points[,1]
y <- res.nmds$points[,2]
# plot
plot(x, y,
xlab="Coordinate 1",
ylab="Coordinate 2",
main="Nonmetric MDS", type="n")
# add points
points(x,y,
display = "sites",
cex = 0.8, pch=21,
col="red", bg="yellow")
# add text
text(x+0.3, y-0.2, labels = row.names(dat), cex=.7)
# plot solution
x <- res.nmds$points[,1]
y <- res.nmds$points[,2]
# plot
plot(x, y,
xlab="Coordinate 1",
ylab="Coordinate 2",
main="Nonmetric MDS", type="n")
# add points
points(x,y,
display = "sites",
cex = 0.8, pch=21,
col="red", bg="yellow")
# add text
text(x+0.25, y-0.2, labels = row.names(dat), cex=.7)
# plot solution
x <- res.nmds$points[,1]
y <- res.nmds$points[,2]
# plot
plot(x, y,
xlab="Coordinate 1",
ylab="Coordinate 2",
main="Nonmetric MDS", type="n")
# add points
points(x,y,
display = "sites",
cex = 0.8, pch=21,
col="red", bg="yellow")
# add text
text(x+0.3, y-0.1, labels = row.names(dat), cex=.7)
# plot solution
x <- res.nmds$points[,1]
y <- res.nmds$points[,2]
# plot
plot(x, y,
xlab="Coordinate 1",
ylab="Coordinate 2",
main="Nonmetric MDS", type="n")
# add points
points(x,y,
cex = 0.8, pch=21,
col="red", bg="yellow")
# add text
text(x+0.3, y-0.1, labels = row.names(dat), cex=.7)
